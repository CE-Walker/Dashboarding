rm(list=ls())
cat("\014")
library(sf)
library(shiny)
library(shinydashboard)
library(leaflet)
library(dplyr)
library(stringr)
library(htmltools)
library(highcharter)
library(scales)
# Set Working Directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Load Geo Data
# geo.cd     <- sf::st_read("Assets/CD.json")
# geo.sd     <- sf::st_read("Assets/SD.json")
geo.hd     <- sf::st_read("Assets/HD.json")
geo.county <- sf::st_read("Assets/County.geojson")
geo.county$NAMELSAD <- str_to_title(geo.county$NAMELSAD)
# # Load 2022 Election Data
# df.2022_election <- read.csv("Assets/2022_November_General_Results.csv")
# df.2022_election$LocalityName <- df.2022_election$LocalityName %>% str_replace_all("KING & QUEEN COUNTY","King And Queen County")
# df.2022_election$LocalityName <- str_to_title(df.2022_election$LocalityName)
# Load 2021 Election Data
# df.2021_election <- read.csv("Assets/2021 November General .csv")
df.2021_election <- read.csv("Assets/2021 November General  - wManualAdjHD.csv") # Partial Mapping File (not perfect)
df.2021_election$DistrictName <- df.2021_election$AdjHD
df.2021_election$LocalityName <- df.2021_election$LocalityName %>% str_replace_all("KING & QUEEN COUNTY","King And Queen County")
df.2021_election$LocalityName <- str_to_title(df.2021_election$LocalityName)
# Load Finance Data
df.finance <- read.csv("Assets/complete.csv")
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
rm(list=ls())
cat("\014")
library(sf)
library(shiny)
library(shinydashboard)
library(leaflet)
library(dplyr)
library(stringr)
library(htmltools)
library(highcharter)
library(scales)
library(tidyr)
# Set Working Directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Load Geo Data
# geo.cd     <- sf::st_read("Assets/CD.json")
# geo.sd     <- sf::st_read("Assets/SD.json")
geo.hd     <- sf::st_read("Assets/HD.json")
geo.county <- sf::st_read("Assets/County.geojson")
geo.county$NAMELSAD <- str_to_title(geo.county$NAMELSAD)
# # Load 2022 Election Data
# df.2022_election <- read.csv("Assets/2022_November_General_Results.csv")
# df.2022_election$LocalityName <- df.2022_election$LocalityName %>% str_replace_all("KING & QUEEN COUNTY","King And Queen County")
# df.2022_election$LocalityName <- str_to_title(df.2022_election$LocalityName)
# Load 2021 Election Data
# df.2021_election <- read.csv("Assets/2021 November General .csv")
df.2021_election <- read.csv("Assets/2021 November General  - wManualAdjHD.csv") # Partial Mapping File (not perfect)
df.2021_election$DistrictName <- df.2021_election$AdjHD
df.2021_election$LocalityName <- df.2021_election$LocalityName %>% str_replace_all("KING & QUEEN COUNTY","King And Queen County")
df.2021_election$LocalityName <- str_to_title(df.2021_election$LocalityName)
# Load Finance Data
df.finance <- read.csv("Assets/complete.csv")
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
df          <- df.2021_election
distType    <- "House of Delegates"
offTitle    <- "Member House of Delegates"
df.geo      <- geo.hd
df.finance  <- df.finance
df <- df %>%
filter(DistrictType==distType,TOTAL_VOTES!=0,OfficeTitle==offTitle) %>%
group_by(DistrictName) %>%
summarize(
totVotes = sum(TOTAL_VOTES),
rVotes   = sum(ifelse(Party == "Republican",TOTAL_VOTES,0)),
dVotes   = sum(ifelse(Party == "Democratic",TOTAL_VOTES,0)),
rCand    = last(LastName[Party == "Republican"][LastName[Party == "Republican"] != ""]),
dCand    = last(LastName[Party == "Democratic"][LastName[Party == "Democratic"] != ""])
) %>%
mutate(
pcR = rVotes / totVotes,
pcD = dVotes / totVotes,
pcDiff = pcR - pcD,
result =
ifelse(pcDiff > .2, "Strong R",
ifelse(pcDiff > .05,"Lean R",
ifelse(pcDiff > -.05,"Swing",
ifelse(pcDiff > -.2,"Lean D","Strong D"))))
)
colnames(df) <- stringr::str_replace_all(colnames(df),"DistrictName","District")
df$District <- as.numeric(df$District)
df <- merge(df.geo,df,by.x='DISTRICT',by.y="District",all.x=TRUE)
colnames(df) <- stringr::str_replace_all(colnames(df),"DISTRICT","District")
df$result <- ifelse(is.na(df$pcDiff),"No Data",df$result) # Remove NA's introduced from merging w/ geo file
df.finSum <-  df.finance %>%
group_by(District, Party) %>%
summarise(
total_cash = sum(EndingBalance),
total_exp = sum(TotalDisbursements),
total_raised = sum(TotalExpendableFunds),
candidate = first(CandidateName)
) %>%
pivot_wider(names_from = Party, values_from = c(total_cash, candidate,total_exp,total_raised), names_sep = "_")
df <- merge(df,df.finSum,by.x='District',by.y="District",all.x=TRUE)
df.out <- df %>% as.data.frame() %>% select(-c("geometry"))
df.out %>% filter(District == 100) %>% select(candidate_Republican) %>% as.character()
write.csv(df.out,"df.csv",row.names=FALSE)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
source("functions.r")
source("ui.r")
source("server.r")
# Run Shiny App
shiny::shinyApp(ui,server)
# Set Working Directory
library(rstudioapi)
library(dplyr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df_in <- read.csv("L2 Output.csv") # Renamed so filenaem would be shorter (was causing issues when publishing)
df_in$key <- paste0(df_in$State_House_District,"_",df_in$Precinct)
df_in %>% select(key) %>% unique() %>% nrow()
mapping_table <- df_in %>%
distinct(State_House_District,Precinct) %>% arrange(State_House_District,Precinct)
# mapping_table
write.csv(mapping_table,"VA_HD-Precinct_MappingTable.csv",row.names=FALSE)
rm(list=ls())
cat("\014")
### USED THIS SCRIPT TO SET UP shinyapps.io
# source for instructions: https://www.shinyapps.io/admin/#/dashboard
#Step 1 - INSTALL & CALL RSCONNECT library
# install.packages('rsconnect')
library(rsconnect)
#Step 2 - AUTHORIZE ACCOUNT
rsconnect::setAccountInfo(name='co-efficient',
token='AF6DB8E7B01B7C370A2F993383BE5FDB',
secret='fHOd8epcRR1Nh5VkgOEYTi27vmZFu405JXK4taxn')
#STEP 3 - DEPLOY
deployApp('C:/Users/ryanm/Desktop/co-efficient/6_ProductionTools/WIP/Interactive_Map_Dashboard_WIP',
account = 'co-efficient',forceUpdate = TRUE, launch.browser = FALSE)
